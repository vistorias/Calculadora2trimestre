import streamlit as st

st.set_page_config(page_title="Calculadora de B√¥nus", layout="wide")
st.title("üí∞ Calculadora de B√¥nus Trimestral")
st.markdown("Simule abaixo seu b√¥nus trimestral marcando as metas cumpridas em cada m√™s.")

# Filtro de m√™s
mes_selecionado = st.radio(
    "üìÖ Visualizar m√™s:",
    options=["Trimestre", "Abril", "Maio", "Junho"],
    horizontal=True
)

# Fun√ß√µes dispon√≠veis
funcoes = [
    "GERENTE", "SUPERVISOR", "VISTORIADOR",
    "ATENDENTE", "SERVI√áOS GERAIS", "ANALISTA", "SUPERVISOR ANALISE"
]
funcao_selecionada = st.selectbox("Selecione sua fun√ß√£o:", funcoes)

# Metas e pesos por fun√ß√£o
dados_funcoes = {
    "GERENTE": [
        ("Produ√ß√£o", 30),
        ("Vistorias de 190,00", 30),
        ("Pesquisa de Satisfa√ß√£o", 5),
        ("Lideran√ßa e Organiza√ß√£o", 5),
        ("Recursos Humanos", 5),
        ("Lucratividade", 25),
    ],
    "SUPERVISOR": [
        ("Produ√ß√£o", 30),
        ("Vistorias de 190,00", 30),
        ("Pesquisa de Satisfa√ß√£o", 10),
        ("Lideran√ßa e Organiza√ß√£o", 10),
        ("Recursos Humanos", 20),
    ],
    "VISTORIADOR": [
        ("Produ√ß√£o", 30),
        ("Vistorias de 190,00", 20),
        ("Pesquisa de Satisfa√ß√£o", 20),
        ("Erros de Vistoria", 10),
        ("Atendimento", 5),
        ("Organiza√ß√£o da Loja", 5),
        ("Treinamento", 5),
        ("Ades√£o Pesquisa de Clima", 5),
    ],
    "ATENDENTE": [
        ("Produ√ß√£o", 20),
        ("Vistorias de 190,00", 30),
        ("Pesquisa de Satisfa√ß√£o", 15),
        ("Atendimento", 10),
        ("Organiza√ß√£o da Loja", 5),
        ("Treinamento", 10),
        ("Ades√£o Pesquisa de Clima", 10),
    ],
    "SERVI√áOS GERAIS": [
        ("Organiza√ß√£o da Loja", 60),
        ("Pesquisa de Satisfa√ß√£o", 10),
        ("Treinamento", 10),
        ("Atendimento", 10),
        ("Ades√£o Pesquisa de Clima", 10),
    ],
    "ANALISTA": [
        ("Produ√ß√£o", 20),
        ("Erros em Vistorias", 45),
        ("Apontamentos", 20),
        ("Conform. Processos", 15),
    ],
    "SUPERVISOR ANALISE": [
        ("Treinamentos", 40),
        ("Erros em Vistorias", 40),
        ("Auditoria", 20),
    ]
}

# Valor mensal por fun√ß√£o
valor_mensal = {
    "GERENTE": 3000,
    "SUPERVISOR": 800,
    "VISTORIADOR": 400,
    "ATENDENTE": 350,
    "SERVI√áOS GERAIS": 350,
    "ANALISTA": 400,
    "SUPERVISOR ANALISE": 800
}

# Obter metas da fun√ß√£o
metas = dados_funcoes[funcao_selecionada]
valor_base = valor_mensal[funcao_selecionada]
cumprimento_total = 0

if mes_selecionado == "Trimestre":
    st.markdown("### ‚úÖ Marque as metas cumpridas em cada m√™s:")
    mes_cols = st.columns(3)
    meses = ["Abril", "Maio", "Junho"]
    meta_cumprida = {meta: 0 for meta, _ in metas}

    for i, mes in enumerate(meses):
        with mes_cols[i]:
            st.markdown(f"**{mes}**")
            for meta, peso in metas:
                key = f"{funcao_selecionada}_{meta}_{mes}"
                if st.checkbox(meta, key=key):
                    meta_cumprida[meta] += 1

    for meta, peso in metas:
        proporcao = meta_cumprida[meta] / 3  # 0, 0.33, 0.66 ou 1
        cumprimento_total += peso * proporcao

    valor_total = valor_base * 3

else:
    st.markdown(f"### ‚úÖ Marque as metas cumpridas em {mes_selecionado}:")
    meta_colunas = st.columns(2)
    for i, (meta, peso) in enumerate(metas):
        with meta_colunas[i % 2]:
            key = f"{funcao_selecionada}_{meta}_{mes_selecionado}"
            if st.checkbox(f"{meta} ({peso}%)", key=key):
                cumprimento_total += peso

    valor_total = valor_base

# Calcular b√¥nus
valor_recebido = valor_total * (cumprimento_total / 100)
valor_perdido = valor_total - valor_recebido

# Exibir resultado
st.markdown("---")
st.markdown(f"### üéØ Resultado da Simula√ß√£o - **{mes_selecionado}**")
st.success(f"üí∞ Valor poss√≠vel: R$ {valor_total:,.2f}")
st.info(f"‚úÖ Valor a receber: R$ {valor_recebido:,.2f}")
st.error(f"‚ùå Valor perdido: R$ {valor_perdido:,.2f}")
st.markdown(f"üìä Cumprimento total: **{cumprimento_total:.1f}%**")